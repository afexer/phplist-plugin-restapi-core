services:
# Classes without dependencies
  Response:
    class:     Rapi\Response
  Campaigns:
    class:     Rapi\Campiagns

# Classes with dependencies
  Admin:
    class:     Rapi\Admin
    arguments: [@Response]
  Common:
    class:     Rapi\Common
    arguments: [@PdoEx, @Response]
  Lists:
    class:     Rapi\Lists
    arguments: [@Common, @PdoEx, @Response]
  PdoEx:
    class:     Rapi\PdoEx
    arguments: [%pdoEx.hostname%, %pdoEx.username%, %pdoEx.pass%, %pdoEx.dbname%]
  Subscribers:
    class:     Rapi\Subscribers
    arguments: [@Common, @PdoEx, @Response]
  Templates:
    class:     Rapi\Templates
    arguments: [@Common]
# It seems order matters; hence Call{} definition goes last, not alphabetically
  Call:
    class:     Rapi\Call
    arguments: [@Admin, @Lists, @Response, @SubscriberManager, @Templates]

# phpList 4 services
  Logger:
    class: phpList\helper\Logger
  Util:
    class: phpList\helper\Util
    arguments: [@Config, @Logger]
  EmailUtil:
    class:  phpList\EmailUtil
    arguments: [@Config, %emailaddress.address%]
  Pass:
    class:  phpList\Pass
    arguments: [@Config, %password.password%]
  Config:
    class: phpList\Config
    arguments: [%config.configfile%]
  Database:
    class:  phpList\helper\Database
    arguments: [@Config]
  Language:
    class: phpList\helper\Language
    arguments: [@Database, @Config]
  phpList:
    class: phpList\phpList
    arguments: [@Config, @Database, @Language, @Util]
  Campaign:
    class: phpList\Campaign
    arguments: [@Config, @Database, @MailingList, @Template]
  MailingList:
    class: phpList\MailingList
    arguments: [@Config, @Database]
  SubscriberManager:
    class: phpList\SubscriberManager
    arguments: [@Config, @EmailUtil, @Pass, @SubscriberModel]
  Template:
    class: phpList\Template
    arguments: [@Config, @Database, @TemplateImage]
  TemplateImage:
    class: phpList\TemplateImage
    arguments: [@Config, @Database]

# Entities
  CampaignEntity:
    class: phpList\Entity\CampaignEntity
  MailingListEntity:
    class: phpList\Entity\MailingListEntity
  SubscriberEntity:
    class: phpList\Entity\SubscriberEntity
  TemplateEntity:
    class: phpList\Entity\TemplateEntity
  TemplateImageEntity:
    class: phpList\Entity\TemplateImageEntity

# Models
  SubscriberModel:
    class: phpList\Model\SubscriberModel
    arguments: [@Config, @Database]

# Define parameters, to be set in app logic
# NOTE: the classname.parameter syntax is just a Symfony convention; parameter
# names are handles as single simple strings
parameters:
  pdoEx.hostname: hostname
  pdoEx.username: username
  pdoEx.pass: pass
  pdoEx.dbname: dbname

# phpList 4 parameters
  config.configfile: config_file
  emailaddress.address: email_address
  password.password: password
